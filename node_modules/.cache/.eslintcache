[{"C:\\Users\\zaeem\\Desktop\\React\\Tic-Tac-Toe\\src\\index.js":"1","C:\\Users\\zaeem\\Desktop\\React\\Tic-Tac-Toe\\src\\App.js":"2","C:\\Users\\zaeem\\Desktop\\React\\Tic-Tac-Toe\\src\\components\\Box.js":"3","C:\\Users\\zaeem\\Desktop\\React\\Tic-Tac-Toe\\src\\components\\Board.js":"4","C:\\Users\\zaeem\\Desktop\\React\\Tic-Tac-Toe\\src\\components\\ScoreBoard.js":"5","C:\\Users\\zaeem\\Desktop\\React\\Tic-Tac-Toe\\src\\components\\ResetButton.js":"6"},{"size":255,"mtime":1690217247563,"results":"7","hashOfConfig":"8"},{"size":2010,"mtime":1692475385021,"results":"9","hashOfConfig":"8"},{"size":246,"mtime":1691839772662,"results":"10","hashOfConfig":"8"},{"size":411,"mtime":1692469676171,"results":"11","hashOfConfig":"8"},{"size":425,"mtime":1692473123289,"results":"12","hashOfConfig":"8"},{"size":202,"mtime":1692472612558,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"px7up0",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"C:\\Users\\zaeem\\Desktop\\React\\Tic-Tac-Toe\\src\\index.js",[],[],[],"C:\\Users\\zaeem\\Desktop\\React\\Tic-Tac-Toe\\src\\App.js",["34","35"],[],"import React, { useState } from \"react\";\n\nimport \"./App.css\";\nimport Board from \"./components/Board\";\nimport ScoreBoard from \"./components/ScoreBoard\";\nimport ResetButton from \"./components/ResetButton\";\nimport banner from \"./components/banner.jpg\";\n\nfunction App() {\n  const WIN_CONDITIONS = [\n    [0, 1, 2],\n    [0, 4, 8],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [2, 4, 6],\n  ];\n\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xPlaying, setXPlaying] = useState(true);\n  const [scores, setScores] = useState({ xScore: 0, oScore: 0 });\n  const [gameOver, setGameOver] = useState(false);\n\n  const boxClickHandler = (boxIndex) => {\n    const updatedBoard = board.map((value, index) => {\n      if (index == boxIndex) {\n        return xPlaying === true ? \"X\" : \"O\";\n      } else {\n        return value;\n      }\n    });\n\n    const winner = checkWinner(updatedBoard);\n\n    if (winner) {\n      if (winner === \"X\") {\n        let { xScore } = scores;\n        xScore += 1;\n        let { oScore } = scores;\n        setScores({ xScore, oScore });\n      } else {\n        let { oScore } = scores;\n        oScore += 1;\n        let { xScore } = scores;\n        setScores({ xScore, oScore });\n      }\n      console.log(scores);\n    }\n\n    setBoard(updatedBoard);\n    setXPlaying(!xPlaying);\n  };\n\n  const checkWinner = (board) => {\n    for (let i = 0; i < WIN_CONDITIONS.length; i++) {\n      const [x, y, z] = WIN_CONDITIONS[i];\n\n      if (board[x] && board[x] === board[y] && board[y] === board[z]) {\n        setGameOver(true);\n        return board[x];\n      }\n    }\n  };\n\n  const resetBoard = () => {\n    setGameOver(false);\n    setBoard(Array(9).fill(null));\n  };\n\n  return (\n    <div className=\"App\">\n      <img src={banner} className=\"image\" />\n      <ScoreBoard scores={scores} xPlaying={xPlaying} />\n      <Board board={board} onClick={gameOver ? resetBoard : boxClickHandler} />\n      <ResetButton reset={resetBoard} />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\zaeem\\Desktop\\React\\Tic-Tac-Toe\\src\\components\\Box.js",[],[],"C:\\Users\\zaeem\\Desktop\\React\\Tic-Tac-Toe\\src\\components\\Board.js",[],[],"C:\\Users\\zaeem\\Desktop\\React\\Tic-Tac-Toe\\src\\components\\ScoreBoard.js",[],[],"C:\\Users\\zaeem\\Desktop\\React\\Tic-Tac-Toe\\src\\components\\ResetButton.js",[],[],{"ruleId":"36","severity":1,"message":"37","line":28,"column":17,"nodeType":"38","messageId":"39","endLine":28,"endColumn":19},{"ruleId":"40","severity":1,"message":"41","line":74,"column":7,"nodeType":"42","endLine":74,"endColumn":45},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]